name: Build and Release Clients

on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Select the client to build (android, java, ios, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - android
          - java
          - ios
          - all
      tag:
        description: 'Release tag (only for releases)'
        required: false
        default: 'v1.0.0'
        type: string

  push:
    paths:
      - '.github/workflows/**'
      - 'demo_src/TCP_Client/**'

jobs:
  build:
    strategy:
      matrix:
        client: [android, java, ios]

        include:
          - client: android
            os: ubuntu-latest
            path: demo_src/TCP_Client/MobileIMSDK4aDemo_tcp
          - client: java
            os: ubuntu-latest
            path: demo_src/TCP_Client/MobileIMSDK4jDemo_tcp
          - client: ios
            os: macos-latest
            path: demo_src/TCP_Client/MobileIMSDK4iDemo_tcp

    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 条件判断 - 手动触发时选择客户端
      - name: Check client type
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Selected client: ${{ github.event.inputs.client }}"
          if [ "${{ github.event.inputs.client }}" != "all" ] && [ "${{ github.event.inputs.client }}" != "${{ matrix.client }}" ]; then
            exit 0
          fi

      # Step 3: 设置环境（JDK 或 Xcode）
      - name: Set up JDK
        if: matrix.client == 'android' || matrix.client == 'java'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up Xcode
        if: matrix.client == 'ios'
        run: sudo xcode-select -s /Applications/Xcode.app

      # Step 4: 构建客户端
      - name: Build Client
        run: |
          cd ${{ matrix.path }}
          if [ "${{ matrix.client }}" == "android" ]; then
            echo "Starting Gradle build..."
            chmod +x gradlew
            ./gradlew clean assembleRelease --no-daemon
          elif [ "${{ matrix.client }}" == "java" ]; then
            mkdir -p out
            javac -d out -cp "lib/*" src/**/*.java
          elif [ "${{ matrix.client }}" == "ios" ]; then
            xcodebuild -project MobileIMSDK4iDemo.xcodeproj -scheme MobileIMSDK4iDemo -configuration Release
          fi
        env:
          ANDROID_HOME: ${{ secrets.ANDROID_HOME }}
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Xmx2g -XX:MaxPermSize=512m"

      # Step 5: 打包构建结果
      - name: Package Artifacts
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.client }}" == "android" ]; then
            cp ${{ matrix.path }}/app/build/outputs/apk/release/*.apk artifacts/
          elif [ "${{ matrix.client }}" == "java" ]; then
            zip -r artifacts/MobileIMSDK4jDemo_tcp.zip ${{ matrix.path }}/out
          elif [ "${{ matrix.client }}" == "ios" ]; then
            zip -r artifacts/MobileIMSDK4iDemo_tcp.zip ${{ matrix.path }}/build/Release-iphoneos
          fi

      # Step 6: 上传到 Release
      - name: Upload to GitHub Releases
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/
          asset_name: ${{ matrix.client }}-client.zip
          asset_content_type: application/zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub Release
        id: create_release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release includes the following:
            - Android Client
            - Java Client
            - iOS Client
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
